name: CI

on:
  push:
    branches: [ main ]

jobs:
  build:
    if: github.repository_owner == 'CumpsD'
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2.4.0

    - name: Cache NPM
      uses: actions/cache@v2.1.7
      env:
        cache-name: cache-npm
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-

    - name: Cache Paket
      uses: actions/cache@v2.1.7
      env:
        cache-name: cache-paket
      with:
        path: packages
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('paket.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-

    - name: Cache Python
      uses: actions/cache@v2.1.7
      env:
        cache-name: cache-pip
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-build-${{ env.cache-name }}

    - name: Parse repository name
      shell: bash
      run: echo REPOSITORY_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//") >> $GITHUB_ENV

    - name: Setup Node.js
      uses: actions/setup-node@v2.5.0

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.9.0
      with:
        dotnet-version: 5.0.203

    - name: Set up Python
      uses: actions/setup-python@v2.3.1
      with:
        python-version: '3.x'

    - name: Node version
      shell: bash
      run: node --version

    - name: .NET version
      shell: bash
      run: dotnet --info

    - name: Python version
      shell: bash
      run: python --version

    - name: Install NPM dependencies
      shell: bash
      run: npm install

    - name: Install Python dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install requests markdown argparse

    - name: Login to Docker Hub
      uses: docker/login-action@v1.10.0
      with:
        registry: ${{ secrets.DOCKERHUB_REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Run Semantic Release
      shell: bash
      run: npx semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GIT_COMMIT: ${{ github.sha }}
        GIT_USERNAME: release-bot
        GIT_AUTHOR_NAME: release-bot
        GIT_COMMITTER_NAME: release-bot
        GIT_EMAIL: functional.living@cumps.be
        GIT_AUTHOR_EMAIL: functional.living@cumps.be
        GIT_COMMITTER_EMAIL: functional.living@cumps.be
        BUILD_DOCKER_REGISTRY: ${{ secrets.DOCKERHUB_REGISTRY }}

    - name: Set Release Version
      run: |
        [ ! -f semver ] && echo none > semver
        echo RELEASE_VERSION=$(cat semver) >> $GITHUB_ENV
      shell: bash
